<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Typescript on Chris Palmieri</title>
    <link>/tags/typescript/</link>
    <description>Recent content in Typescript on Chris Palmieri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 May 2022 14:20:16 +1000</lastBuildDate><atom:link href="/tags/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Higher-Order Functional Components (HOCs) in React (with Typescript)</title>
      <link>/post/2022-05-14-higher-order-components-hocs/</link>
      <pubDate>Sat, 14 May 2022 14:20:16 +1000</pubDate>
      
      <guid>/post/2022-05-14-higher-order-components-hocs/</guid>
      <description>Background Higher-Order Components are &amp;ldquo;functions that take a component and return a new component&amp;rdquo;, and while they are not part of the React API, &amp;ldquo;they are a pattern that emerges from React&amp;rsquo;s compositional nature&amp;rdquo; (React docs).
HOCs can be used to avoid repeated code in many scenarios such as:
 showing a loader, while waiting for data, conditionally rendering components, managing common user-interactions states, providing components with specific styles, and more generally, providing a component with any prop.</description>
    </item>
    
    <item>
      <title>Javascript: Gotchas with logical operators || and &amp;&amp;</title>
      <link>/post/20211229-javascript-gotchas/</link>
      <pubDate>Wed, 29 Dec 2021 11:39:50 +1000</pubDate>
      
      <guid>/post/20211229-javascript-gotchas/</guid>
      <description>Overview Javascript&amp;rsquo;s logical OR || and logical AND &amp;amp;&amp;amp; operators are useful in contexts other than creating if, else, while etc. statements, but there are some edge cases that that I see many devs (myself included) getting caught out by.
This article explores common pitfalls, and provides recommendations for:
 using || to define values with a default fallback, and using &amp;amp;&amp;amp; to conditionally render JSX components only when required props are defined.</description>
    </item>
    
  </channel>
</rss>
